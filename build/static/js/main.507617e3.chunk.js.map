{"version":3,"sources":["utils/usePersistedState.ts","styles/global.ts","components/layout/styles.ts","components/layout/index.tsx","styles/themes/light.ts","styles/themes/dark.ts","App.tsx","index.tsx"],"names":["usePersistedState","key","initialState","useState","storageValue","localStorage","getItem","JSON","parse","state","setState","useEffect","setItem","stringify","createGlobalStyle","props","theme","colors","backgound","text","Container","styled","div","TextBox","primary","Header","toggleTheme","useContext","ThemeContext","title","onChange","checked","checkedIcon","uncheckedIcon","width","height","handleDiameter","offColor","secondary","onColor","App","light","setTheme","dark","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNAsBeA,EApBW,SAACC,EAAaC,GAAuB,IAAD,EAElCC,oBAAS,WACjC,IAAMC,EAAeC,aAAaC,QAAQL,GAE1C,OAAIG,EACKG,KAAKC,MAAMJ,GAEXF,KARiD,mBAErDO,EAFqD,KAE9CC,EAF8C,KAgB5D,OAJAC,qBAAU,WACRN,aAAaO,QAAQX,EAAKM,KAAKM,UAAUJ,MACxC,CAACR,EAAKQ,IAEF,CAACA,EAAOC,I,mQChBFI,kBAAf,KAQkB,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,aACjC,SAAAH,GAAK,OAAIA,EAAMC,MAAMC,OAAOE,Q,4kBCTlC,IAAMC,EAAYC,IAAOC,IAAV,KAaTC,EAAUF,IAAOC,IAAV,KACJ,SAACP,GAAD,OAAWA,EAAMC,MAAMC,OAAOC,aACnC,SAACH,GAAD,OAAWA,EAAMC,MAAMC,OAAOE,QAEnB,SAACJ,GAAD,OAAWA,EAAMC,MAAMC,OAAOO,WCiBrCC,EAzBiB,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAAkB,EACzBC,qBAAWC,KAA7BX,EAD2C,EAC3CA,OAAQY,EADmC,EACnCA,MAEhB,OACE,kBAACT,EAAD,KACE,kBAACG,EAAD,KAEE,2FAGF,kBAAC,IAAD,CACEO,SAAUJ,EACVK,QAAmB,SAAVF,EACTG,aAAa,EACbC,eAAe,EACfC,MAAO,GACPC,OAAQ,GACRC,eAAgB,GAChBC,SAAUpB,EAAOqB,UACjBC,QAAStB,EAAOqB,cC9BT,GAEbT,MAAO,QAEPZ,OAAQ,CACNO,QAAS,UACTc,UAAW,UAEXpB,UAAW,UACXC,KAAM,SCTK,GAEbU,MAAO,OAEPZ,OAAQ,CACNO,QAAS,UACTc,UAAW,UAEXpB,UAAW,UACXC,KAAM,SCqBKqB,MAnBf,WAAgB,IAAD,EAEaxC,EAAkB,QAASyC,GAFxC,mBAENzB,EAFM,KAEC0B,EAFD,KASb,OACE,oCACE,kBAAC,IAAD,CAAe1B,MAAOA,GACpB,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAQU,YATM,WAClBgB,EAAyB,UAAhB1B,EAAMa,MAAoBc,EAAOF,SCZ9CG,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.507617e3.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\n\nconst usePersistedState = (key: string, initialState: any) => {\n\n  const [state, setState] = useState(() => {\n    const storageValue = localStorage.getItem(key);\n\n    if (storageValue) {\n      return JSON.parse(storageValue);\n    } else {\n      return initialState\n    }\n  });\n\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(state));\n  }, [key, state]);\n\n  return [state, setState]\n\n};\n\nexport default usePersistedState;","import { createGlobalStyle } from 'styled-components';\n\nexport default createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n  }\n\n  body{\n    background: ${props => props.theme.colors.backgound};\n    color: ${props => props.theme.colors.text};\n    font-size: 14px;\n    font-family: sans-serif;\n  }\n`;","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 100vw;\n  height: 100vh;\n\n  padding: 32px;\n  color: #FFF;\n\n  align-items: center;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n`\n\nexport const TextBox = styled.div`\n  background: ${(props) => props.theme.colors.backgound};\n  color: ${(props) => props.theme.colors.text};\n\n  border: 1px solid ${(props) => props.theme.colors.primary};\n\n  width: 850px;\n  height: 80px;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  border-radius: 5px;\n  margin-bottom: 20px;\n\n  span {\n    font-size: 30px;\n  }\n`\n","import React, { useContext } from 'react';\nimport Switch from 'react-switch';\nimport { ThemeContext } from 'styled-components';\n\nimport { Container, TextBox } from './styles'\n\ninterface Props {\n  toggleTheme(): void;\n}\n\n\nconst Header: React.FC<Props> = ({ toggleTheme }) => {\n  const { colors, title } = useContext(ThemeContext);\n\n  return (\n    <Container>\n      <TextBox>\n        {/*<span>{ `${title[0].toUpperCase()}${title.slice(1)}` }</span>*/}\n        <span>Lorem ipsum, dolor sit amet consectetur adipisicing elit</span>\n      </TextBox>\n\n      <Switch\n        onChange={toggleTheme}\n        checked={title === 'dark'}\n        checkedIcon={false}\n        uncheckedIcon={false}\n        width={70}\n        height={30}\n        handleDiameter={20}\n        offColor={colors.secondary}\n        onColor={colors.secondary}\n      />\n    </Container>\n  );\n};\n\nexport default Header;","export default {\n\n  title: 'light',\n\n  colors: {\n    primary: '#7353ba',\n    secondary: '#2F195F',\n\n    backgound: '#f5f5f5',\n    text: '#000',\n\n  }\n\n};","export default {\n\n  title: 'dark',\n\n  colors: {\n    primary: '#2F195F',\n    secondary: '#7353ba',\n\n    backgound: '#0f1020',\n    text: '#FFF',\n\n  }\n\n};","import React from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport usePersistedState from './utils/usePersistedState'\n\nimport GlobalStyles from './styles/global'\nimport Header from './components/layout';\n\nimport light from './styles/themes/light';\nimport dark from './styles/themes/dark';\n\n\nfunction App() {\n\n  const [theme, setTheme] = usePersistedState('theme', light);\n\n  const toggleTheme = () => {\n    setTheme(theme.title === 'light' ? dark : light);\n  };\n\n\n  return (\n    <>\n      <ThemeProvider theme={theme}>\n        <GlobalStyles />\n        <Header toggleTheme={toggleTheme} />\n      </ThemeProvider>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}